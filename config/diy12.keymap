#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define XXX &none
#define ___ &trans

#define QUICK_TAP_MS 175

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

#define HOMEROWKEYS 51 52 53 54 55 56 25 26 27 28 29 30 31 32 33 34

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, HOMEROWKEYS)

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC    &kp N1        &kp N2        &kp N3           &kp N4          &kp N5      &kp N6  &kp N7       &kp N8       &kp N9         &kp N0         &kp BSPC
                &kp TAB    &kp Q         &kp W         &kp E            &kp R           &kp T       &kp Y   &kp U        &kp I        &kp O          &kp P          &kp BSLH
                &kp LCTRL  &hml LGUI A   &hml LALT S   &hml LSHFT D     &hml LCTRL F    &kp G       &kp H   &hmr LCTRL J &hmr RSHFT K &hmr LALT L    &hmr LGUI SEMI &kp SQT
                XXX        &kp LSHFT     &kp Z         &kp X            &kp C           &kp V       &kp B   &kp N        &kp M        &kp COMMA      &kp DOT        &kp FSLH
                XXX        &kp LEFT_GUI  &kp C_VOL_DN  &kp C_VOLUME_UP  &lt 1 DEL       &lt 2 BSPC  XXX     &lt 3 ENTER  &lt 4 SPACE  &kp RIGHT_ALT  &kp LEFT       &kp RIGHT
            >;
        };

        number_layer {
            bindings = <
                ___       ___       &kp F10  &kp F11  &kp F12  ___  ___  ___              ___              ___              ___  ___
                ___       ___       &kp F7   &kp F8   &kp F9   ___  ___  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  ___  ___
                ___       ___       &kp F4   &kp F5   &kp F6   ___  ___  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  ___  ___
                ___       ___       &kp F1   &kp F2   &kp F3   ___  ___  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kt KP_NUMBER_3  ___  ___
                ___       ___       ___      ___      ___      ___  ___  &kt KP_NUMBER_0  ___              ___              ___  ___
            >;
        };

        nav_layer {
            bindings = <
                ___  ___  ___  ___  ___  ___  ___       ___       ___           ___         ___     ___
                ___  ___  ___  ___  ___  ___  ___       ___       &kp UP_ARROW  ___         ___     ___
                ___  ___  ___  ___  ___  ___  &kp HOME  &kp LEFT  &kp DOWN      &kp RIGHT   &kp END ___
                ___  ___  ___  ___  ___  ___  ___       ___       ___           ___         ___     ___
                ___  ___  ___  ___  ___  ___  ___       ___       ___           ___         ___     ___
            >;
        };

        func_layer {
            bindings = <
&tog 4  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6       &kp F7       &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
___  XXX   XXX   XXX   XXX   XXX        XXX        XXX   XXX   XXX    XXX    &kp LA(PSCRN)
___  XXX   XXX   XXX   XXX   XXX        XXX        XXX   XXX   XXX    XXX    &kp PSCRN
___  XXX   XXX   XXX   XXX   XXX        XXX        XXX   XXX   XXX    XXX    &kp LC(DEL)
___  ___  ___  ___  ___  &bootloader  &bootloader  ___  ___  ___   ___   ___
            >;
        };

        symbol_layer {
            bindings = <
___  ___     ___     ___    ___    ___    ___     ___    ___     ___     ___     ___
___  &kp GRAVE  &kt EXCL   &kt AT    &kt HASH  &kt DLLR  &kt CARET  &kt AMPS  &kp BSLH   &kt PIPE   &kt PRCNT  ___
___  &kt UNDER  &kp EQUAL  &kt LPAR  &kt RPAR  &kp APOS  &kt EQUAL  &kt PLUS  &kt ASTRK  &kt MINUS  &kt SLASH  ___
___  &kt TILDE  ___     &kp LBKT  &kp RBKT  &kt DQT   ___     &kt LBRC  &kt RBRC   &kt LT     &kt GT     ___
___  ___     ___     ___    ___    ___    ___     ___    ___     ___     ___     ___
            >;
        };

        flock_layer {
            bindings = <
___        ___        ___        ___        ___        ___        ___      ___      ___      ___  ___  ___
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_PRV  &bt BT_NXT  &bt BT_CLR  ___  ___  ___
___        ___        ___        ___        ___        ___        ___      ___      ___      ___  ___  ___
___        ___        ___        ___        ___        ___        ___      ___      ___      ___  ___  ___
___        ___        ___        ___        ___        ___        ___      ___      ___      ___  ___  ___
            >;
        };
    };
};